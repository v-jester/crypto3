import asyncio
import asyncpg
from pathlib import Path


async def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""

    conn = await asyncpg.connect(
        host='localhost',
        port=5432,
        user='trader',
        password='trading_password_123',
        database='trading_bot'
    )

    print("üìä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

    # –í–∫–ª—é—á–∞–µ–º TimescaleDB
    await conn.execute("CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;")
    print("‚úÖ TimescaleDB extension —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    # –°–æ–∑–¥–∞—ë–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
    await conn.execute("""
        CREATE TABLE IF NOT EXISTS klines (
            time TIMESTAMPTZ NOT NULL,
            symbol VARCHAR(20) NOT NULL,
            interval VARCHAR(10) NOT NULL,
            open DECIMAL(20,8),
            high DECIMAL(20,8),
            low DECIMAL(20,8),
            close DECIMAL(20,8),
            volume DECIMAL(20,8),
            PRIMARY KEY (time, symbol, interval)
        );
    """)

    # –î–µ–ª–∞–µ–º –≥–∏–ø–µ—Ä—Ç–∞–±–ª–∏—Ü—É
    try:
        await conn.execute("""
            SELECT create_hypertable('klines', 'time', if_not_exists => TRUE);
        """)
        print("‚úÖ Hypertable 'klines' —Å–æ–∑–¥–∞–Ω–∞")
    except:
        print("‚ÑπÔ∏è Hypertable 'klines' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

    await conn.close()
    print("‚ú® –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞!")


if __name__ == "__main__":
    asyncio.run(init_database())