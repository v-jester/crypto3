# quick_trade_test.py
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
"""
import asyncio
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent))


async def test_with_modified_params():
    from src.bots.advanced_paper_bot import AdvancedPaperTradingBot

    bot = AdvancedPaperTradingBot(
        initial_balance=50000.0,
        maker_fee=0.001,
        taker_fee=0.001,
        slippage_bps=5.0
    )

    await bot.initialize()
    print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω\n")

    # –ñ–¥—ë–º –¥–∞–Ω–Ω—ã–µ
    await asyncio.sleep(20)

    # –ú–û–î–ò–§–ò–¶–ò–†–£–ï–ú –ø–æ—Ä–æ–≥–∏ –ø—Ä—è–º–æ –≤ runtime
    print("üìä –¢–µ–∫—É—â–∏–µ RSI:")
    for symbol in bot.indicators:
        rsi = bot.indicators[symbol].get('rsi', 0)
        print(f"  {symbol}: {rsi:.2f}")

    print("\nüîß –ü—Ä–∏–º–µ–Ω—è–µ–º –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é...")

    # –•–∞–∫–∞–µ–º –º–µ—Ç–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–∞
    original_method = bot._generate_trading_signal

    async def modified_signal(symbol, df, indicators):
        signal = await original_method(symbol, df, indicators)
        # –£—Å–∏–ª–∏–≤–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è —Ç–µ–∫—É—â–∏—Ö —É—Å–ª–æ–≤–∏–π
        rsi = indicators.get('rsi', 50)
        if 55 < rsi < 65:  # –¢–µ–∫—É—â–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω
            signal['action'] = 'SELL'
            signal['confidence'] = 0.65
            signal['reasons'].append(f"Modified: RSI high range ({rsi:.1f})")
        return signal

    bot._generate_trading_signal = modified_signal

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
    await bot._analyze_and_trade()

    print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print(f"–ü–æ–∑–∏—Ü–∏–π –æ—Ç–∫—Ä—ã—Ç–æ: {len(bot.positions)}")
    for symbol, pos in bot.positions.items():
        print(f"  {symbol}: {pos.side} @ ${pos.entry_price:.2f}")

    await bot.stop()


if __name__ == "__main__":
    asyncio.run(test_with_modified_params())